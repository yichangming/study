/* gc4C33_lib.h
 *
 *Copyright (c) 2016 Qualcomm Technologies, Inc.
 *All Rights Reserved.
 *Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

#ifndef __GC4C33_LIB_H__
#define __GC4C33_LIB_H__

#include "sensor_lib.h"

#define SENSOR_MODEL "gc4C33"
#define MAX_ANALOG_GAIN 8
#define IMAGE_HV_MIRROR
#ifdef IMAGE_NORMAL_MIRROR
#define MIRROR 0xd4
#define STARTY 0x01
#define STARTX 0x01
#define BLK_Select1_H 0x00
#define BLK_Select1_L 0x3c
#define BLK_Select2_H 0x00
#define BLK_Select2_L 0x03
#endif

#ifdef IMAGE_H_MIRROR
#define MIRROR 0xd5
#define STARTY 0x01
#define STARTX 0x00
#define BLK_Select1_H 0x00
#define BLK_Select1_L 0x3c
#define BLK_Select2_H 0x00
#define BLK_Select2_L 0x03
#endif

#ifdef IMAGE_V_MIRROR
#define MIRROR 0xd6
#define STARTY 0x02
#define STARTX 0x01
#define BLK_Select1_H 0x3c
#define BLK_Select1_L 0x00
#define BLK_Select2_H 0xc0
#define BLK_Select2_L 0x00
#endif

#ifdef IMAGE_HV_MIRROR
#define MIRROR 0xd7
#define STARTY 0x02
#define STARTX 0x00
#define BLK_Select1_H 0x3c
#define BLK_Select1_L 0x00
#define BLK_Select2_H 0xc0
#define BLK_Select2_L 0x00
#endif


#define ANALOG_GAIN_1 64  // 1.000x
#define ANALOG_GAIN_2 92  // 1.43x
#define ANALOG_GAIN_3 128 // 2.00x
#define ANALOG_GAIN_4 182 // 2.84x
#define ANALOG_GAIN_5 254 // 3.97x
#define ANALOG_GAIN_6 363 // 5.68x
#define ANALOG_GAIN_7 521 // 8.14x


#define START_REG_ARRAY \
{ \
  {0x0100, 0x09, 0x00}, \
}

#define STOP_REG_ARRAY \
{ \
  {0x0100, 0x00, 0x00}, \
}

#define INIT0_REG_ARRAY \
{  \
  {0x031c, 0x01, 0x00}, \
  {0x0317, 0x24, 0x00}, \
  {0x0320, 0x77, 0x00}, \
  {0x0106, 0x78, 0x00}, \
  {0x0324, 0x84, 0x00}, \
  {0x0327, 0x30, 0x00}, \
  {0x0325, 0x04, 0x00}, \
  {0x0326, 0x22, 0x00}, \
  {0x031a, 0x00, 0x00}, \
  {0x0314, 0x30, 0x00}, \
  {0x0315, 0x23, 0x00}, \
  {0x0334, 0x00, 0x00}, \
  {0x0337, 0x03, 0x00}, \
  {0x0335, 0x01, 0x00}, \
  {0x0336, 0x46, 0x00}, \
  {0x0324, 0xc4, 0x00}, \
  {0x0334, 0x40, 0x00}, \
  {0x031c, 0x03, 0x00}, \
  {0x031c, 0xd2, 0x00}, \
  {0x0180, 0x26, 0x00}, \
  {0x031c, 0xd6, 0x00}, \
  {0x0287, 0x18, 0x00}, \
  {0x02ee, 0x70, 0x00}, \
  {0x0202, 0x05, 0x00}, \
  {0x0203, 0xd0, 0x00}, \
  {0x0213, 0x1c, 0x00}, \
  {0x0214, 0x04, 0x00}, \
  {0x0290, 0x00, 0x00}, \
  {0x029d, 0x08, 0x00}, \
  {0x0340, 0x06, 0x00}, \
  {0x0341, 0x04, 0x00}, \
}

#define RES0_REG_ARRAY \
{ \
  {0x0342, 0x01, 0x00}, \
  {0x0343, 0xfe, 0x00}, \
  {0x00f2, 0x04, 0x00}, \
  {0x00f1, 0x0a, 0x00}, \
  {0x00f0, 0xa0, 0x00}, \
  {0x00c5, 0x0a, 0x00}, \
  {0x00c6, 0xa0, 0x00}, \
  {0x00bf, 0x17, 0x00}, \
  {0x00ce, 0x0a, 0x00}, \
  {0x00cd, 0x01, 0x00}, \
  {0x00cf, 0x89, 0x00}, \
  {0x023c, 0x06, 0x00}, \
  {0x02d1, 0xc2, 0x00}, \
  {0x027d, 0xcc, 0x00}, \
  {0x0238, 0xa4, 0x00}, \
  {0x02ce, 0x1f, 0x00}, \
  {0x02f9, 0x00, 0x00}, \
  {0x0227, 0x74, 0x00}, \
  {0x0232, 0xc8, 0x00}, \
  {0x0245, 0xa8, 0x00}, \
  {0x027d, 0xcc, 0x00}, \
  {0x02fa, 0xb0, 0x00}, \
  {0x02e7, 0x23, 0x00}, \
  {0x02e8, 0x50, 0x00}, \
  {0x021d, 0x03, 0x00}, \
  {0x0220, 0x43, 0x00}, \
  {0x0228, 0x10, 0x00}, \
  {0x022c, 0x2c, 0x00}, \
  {0x024b, 0x11, 0x00}, \
  {0x024e, 0x11, 0x00}, \
  {0x024d, 0x11, 0x00}, \
  {0x0255, 0x11, 0x00}, \
  {0x025b, 0x11, 0x00}, \
  {0x0262, 0x01, 0x00}, \
  {0x02d4, 0x10, 0x00}, \
  {0x0540, 0x10, 0x00}, \
  {0x0239, 0x00, 0x00}, \
  {0x0231, 0xc4, 0x00}, \
  {0x024f, 0x11, 0x00}, \
  {0x028c, 0x1a, 0x00}, \
  {0x02d3, 0x01, 0x00}, \
  {0x02da, 0x35, 0x00}, \
  {0x02db, 0xd0, 0x00}, \
  {0x02e6, 0x30, 0x00}, \
  {0x0512, 0x00, 0x00}, \
  {0x0513, 0x00, 0x00}, \
  {0x0515, 0x20, 0x00}, \
  {0x0518, 0x00, 0x00}, \
  {0x0519, 0x00, 0x00}, \
  {0x051d, 0x50, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0221, 0x50, 0x00}, \
  {0x0223, 0xcc, 0x00}, \
  {0x0225, 0x07, 0x00}, \
  {0x0229, 0x36, 0x00}, \
  {0x022b, 0x0c, 0x00}, \
  {0x022e, 0x0c, 0x00}, \
  {0x0230, 0x03, 0x00}, \
  {0x023a, 0x38, 0x00}, \
  {0x027b, 0x3c, 0x00}, \
  {0x027c, 0x0c, 0x00}, \
  {0x0298, 0x13, 0x00}, \
  {0x02a4, 0x07, 0x00}, \
  {0x02ab, 0x00, 0x00}, \
  {0x02ac, 0x00, 0x00}, \
  {0x02ad, 0x07, 0x00}, \
  {0x02af, 0x01, 0x00}, \
  {0x02cd, 0x3c, 0x00}, \
  {0x02d2, 0xe8, 0x00}, \
  {0x02e4, 0x00, 0x00}, \
  {0x0530, 0x04, 0x00}, \
  {0x0531, 0x04, 0x00}, \
  {0x0243, 0x36, 0x00}, \
  {0x0219, 0x07, 0x00}, \
  {0x02e5, 0x28, 0x00}, \
  {0x0338, 0xaa, 0x00}, \
  {0x0339, 0xaa, 0x00}, \
  {0x033a, 0x02, 0x00}, \
  {0x023b, 0x20, 0x00}, \
  {0x0212, 0x48, 0x00}, \
  {0x0523, 0x02, 0x00}, \
  {0x0347, 0x06, 0x00}, \
  {0x0348, 0x0a, 0x00}, \
  {0x0349, 0x10, 0x00}, \
  {0x034a, 0x05, 0x00}, \
  {0x034b, 0xb0, 0x00}, \
  {0x034c, 0x0a, 0x00}, \
  {0x034d, 0x00, 0x00}, \
  {0x034e, 0x05, 0x00}, \
  {0x034f, 0xa0, 0x00}, \
  {0x0354, 0x01, 0x00}, \
  {0x0295, 0xff, 0x00}, \
  {0x0296, 0xff, 0x00}, \
  {0x02f0, 0x22, 0x00}, \
  {0x02f1, 0x22, 0x00}, \
  {0x02f2, 0xff, 0x00}, \
  {0x02f4, 0x32, 0x00}, \
  {0x02f5, 0x20, 0x00}, \
  {0x02f6, 0x1c, 0x00}, \
  {0x02f7, 0x1f, 0x00}, \
  {0x02f8, 0x00, 0x00}, \
  {0x0291, 0x04, 0x00}, \
  {0x0292, 0x22, 0x00}, \
  {0x0297, 0x22, 0x00}, \
  {0x02d5, 0xfe, 0x00}, \
  {0x02d6, 0xd0, 0x00}, \
  {0x02d7, 0x35, 0x00}, \
  {0x0268, 0x3b, 0x00}, \
  {0x0269, 0x3b, 0x00}, \
  {0x0272, 0x80, 0x00}, \
  {0x0273, 0x80, 0x00}, \
  {0x0274, 0x80, 0x00}, \
  {0x0275, 0x80, 0x00}, \
  {0x0276, 0x80, 0x00}, \
  {0x0277, 0x80, 0x00}, \
  {0x0278, 0x80, 0x00}, \
  {0x0279, 0x80, 0x00}, \
  {0x0555, 0x50, 0x00}, \
  {0x0556, 0x23, 0x00}, \
  {0x0557, 0x50, 0x00}, \
  {0x0558, 0x23, 0x00}, \
  {0x0559, 0x50, 0x00}, \
  {0x055a, 0x23, 0x00}, \
  {0x055b, 0x50, 0x00}, \
  {0x055c, 0x23, 0x00}, \
  {0x055d, 0x50, 0x00}, \
  {0x055e, 0x23, 0x00}, \
  {0x0550, 0x28, 0x00}, \
  {0x0551, 0x28, 0x00}, \
  {0x0552, 0x28, 0x00}, \
  {0x0553, 0x28, 0x00}, \
  {0x0554, 0x28, 0x00}, \
  {0x0220, 0x43, 0x00}, \
  {0x021f, 0x03, 0x00}, \
  {0x0233, 0x01, 0x00}, \
  {0x0234, 0x80, 0x00}, \
  {0x02be, 0x81, 0x00}, \
  {0x00a0, 0x5d, 0x00}, \
  {0x00c7, 0x94, 0x00}, \
  {0x00c8, 0x15, 0x00}, \
  {0x00df, 0x0a, 0x00}, \
  {0x00de, 0xfe, 0x00}, \
  {0x00aa, 0x3a, 0x00}, \
  {0x00c0, 0x0a, 0x00}, \
  {0x031c, 0x80, 0x00}, \
  {0x031f, 0x10, 0x00}, \
  {0x031f, 0x00, 0x00}, \
  {0x031c, 0xd2, 0x00}, \
  {0x031c, 0xd2, 0x00}, \
  {0x031c, 0xd2, 0x00}, \
  {0x031c, 0xd2, 0x00}, \
  {0x031c, 0x80, 0x00}, \
  {0x031f, 0x10, 0x00}, \
  {0x031f, 0x00, 0x00}, \
  {0x031c, 0xd6, 0x00}, \
  {0x0053, 0x00, 0x00}, \
  {0x008e, 0x55, 0x00}, \
  {0x0205, 0xc0, 0x00}, \
  {0x02b0, 0xe0, 0x00}, \
  {0x02b1, 0xe0, 0x00}, \
  {0x02b3, 0x00, 0x00}, \
  {0x02b4, 0x00, 0x00}, \
  {0x02fc, 0x00, 0x00}, \
  {0x02fd, 0x00, 0x00}, \
  {0x0263, 0x00, 0x00}, \
  {0x0267, 0x00, 0x00}, \
  {0x0451, 0xd0, 0x00}, \
  {0x0455, 0x07, 0x00}, \
  {0x0452, 0x90, 0x00}, \
  {0x0456, 0x07, 0x00}, \
  {0x0450, 0x00, 0x00}, \
  {0x0454, 0x04, 0x00}, \
  {0x0453, 0x00, 0x00}, \
  {0x0457, 0x04, 0x00}, \
  {0x0226, 0x30, 0x00}, \
  {0x0042, 0x20, 0x00}, \
  {0x0458, 0x01, 0x00}, \
  {0x0459, 0x01, 0x00}, \
  {0x045a, 0x01, 0x00}, \
  {0x045b, 0x01, 0x00}, \
  {0x044c, 0x80, 0x00}, \
  {0x044d, 0x80, 0x00}, \
  {0x044e, 0x80, 0x00}, \
  {0x044f, 0x80, 0x00}, \
  {0x0060, 0x40, 0x00}, \
  {0x00e1, 0x81, 0x00}, \
  {0x00e2, 0x1c, 0x00}, \
  {0x00e4, 0x01, 0x00}, \
  {0x00e5, 0x01, 0x00}, \
  {0x00e6, 0x01, 0x00}, \
  {0x00e7, 0x00, 0x00}, \
  {0x00e8, 0x00, 0x00}, \
  {0x00e9, 0x00, 0x00}, \
  {0x00ea, 0xf0, 0x00}, \
  {0x00ef, 0x04, 0x00}, \
  {0x00a1, 0x05, 0x00}, \
  {0x00a2, 0x05, 0x00}, \
  {0x00a7, 0x00, 0x00}, \
  {0x00a8, 0x20, 0x00}, \
  {0x00a9, 0x20, 0x00}, \
  {0x00b3, 0x00, 0x00}, \
  {0x00b4, 0x10, 0x00}, \
  {0x00b5, 0x20, 0x00}, \
  {0x00b6, 0x30, 0x00}, \
  {0x00b7, 0x40, 0x00}, \
  {0x00d1, 0x06, 0x00}, \
  {0x00d2, 0x04, 0x00}, \
  {0x00d4, 0x02, 0x00}, \
  {0x00d5, 0x04, 0x00}, \
  {0x0089, 0x03, 0x00}, \
  {0x008c, 0x10, 0x00}, \
  {0x0080, 0x06, 0x00}, \
  {0x0180, 0x66, 0x00}, \
  {0x0181, 0x30, 0x00}, \
  {0x0182, 0x55, 0x00}, \
  {0x0185, 0x01, 0x00}, \
  {0x0114, 0x01, 0x00}, \
  {0x0115, 0x12, 0x00}, \
  {0x0103, 0x00, 0x00}, \
  {0x0104, 0x20, 0x00}, \
}

static sensor_lib_t sensor_lib_ptr =
{
  .sensor_slave_info =
  {
    .sensor_name = SENSOR_MODEL,
    .slave_addr = 0x52,
    .i2c_freq_mode = SENSOR_I2C_MODE_FAST,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .sensor_id_info =
    {
      .sensor_id_reg_addr = 0x03f0,
      .sensor_id = 0x4633,
    },
    .power_setting_array =
    {
      .power_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_HIGH,
          .delay = 10,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 10,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 10,
        },
       {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 1,
        },

       {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 24000000,
          .delay = 16,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_LOW,
          .delay = 10,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_HIGH,
          .delay = 16,
        },
        },
      .size = 8,
      .power_down_setting_a =
      {
        {

          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_HIGH,
          .delay = 5,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 5,
        },
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 0,
          .delay = 5,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 1,
        },
      },
      .size_down = 6,
    },
  },
  .sensor_output =
  {
    .output_format = SENSOR_BAYER,
    .connection_mode = SENSOR_MIPI_CSI,
    .raw_output = SENSOR_10_BIT_DIRECT,
    .filter_arrangement = SENSOR_BGGR,
  },
  .output_reg_addr =
  {
    .x_output = 0x034C,
    .y_output = 0x034E,
    .line_length_pclk = 0x0342,
    .frame_length_lines = 0x0340,
  },
  .exp_gain_info =
  {
    .coarse_int_time_addr = 0x0202,
    .global_gain_addr = 0xb2,
    .vert_offset = 0,
  },
  .aec_info =
  {
  .max_gain = 8.0,
  .max_linecount = 8000,
  },
  .sensor_num_frame_skip = 3,
  .sensor_num_HDR_frame_skip = 2,
  .sensor_max_pipeline_frame_delay = 2,
  .sensor_property =
  {
    .pix_size = 1.75,
    .sensing_method = SENSOR_SMETHOD_ONE_CHIP_COLOR_AREA_SENSOR,
    .crop_factor = 1.0,
  },
  .pixel_array_size_info =
  {
    .active_array_size =
    {
      .width = 1600,
      .height = 1200,
    },
    .left_dummy = 0,
    .right_dummy = 0,
    .top_dummy = 0,
    .bottom_dummy = 0,
  },
  .color_level_info =
  {
    .white_level = 1023,
    .r_pedestal = 64,
    .gr_pedestal = 64,
    .gb_pedestal = 64,
    .b_pedestal = 64,
  },
  .sensor_stream_info_array =
  {
    .sensor_stream_info =
    {
      {
        .vc_cfg_size = 1,
        .vc_cfg =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
        },
        .pix_data_fmt =
        {
          SENSOR_BAYER,
        },
      },
    },
    .size = 1,
  },
  .start_settings =
  {
    .reg_setting_a = START_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .stop_settings =
  {
    .reg_setting_a = STOP_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .embedded_data_enable_settings =
  {
    .reg_setting_a = {},
    .addr_type = 0,
    .data_type = 0,
    .delay = 0,
  },
  .embedded_data_disable_settings =
  {
    .reg_setting_a = {},
    .addr_type = 0,
    .data_type = 0,
    .delay = 0,
  },
  .init_settings_array =
  {
    .reg_settings =
    {
      {
        .reg_setting_a = INIT0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 60,
      },
    },
    .size = 1,
  },
  .res_settings_array =
  {
    .reg_settings =
    {
      /* Res 0 */
      {
        .reg_setting_a = RES0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 3,
  },
  .out_info_array =
  {
    .out_info =
    {
      /* For SNAPSHOT&PREVIEW */
      {
        .x_output = 2560,
        .y_output = 1440,
        .line_length_pclk = 510,
        .frame_length_lines = 1540,
        .vt_pixel_clk = 23562000,
        .op_pixel_clk = 78000000,
        .binning_factor = 1,
        .min_fps = 8,
        .max_fps = 30.0,
        .mode = SENSOR_DEFAULT_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 0,
      },
    },
    .size = 1,
  },
  .csi_params =
  {
    .lane_cnt = 2,
    .settle_cnt = 0x14,
    .is_csi_3phase = 0,
  },
  .csid_lut_params_array =
  {
    .lut_params =
    {
      /* Res 0 */
      {
        .num_cid = 1,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
    },
    .size = 1,
  },
  .crop_params_array =
  {
    .crop_params =
    {
      /* Res 0 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
    },
    .size = 1,
  },
  .exposure_func_table =
  {
    .sensor_calculate_exposure = sensor_calculate_exposure,
    .sensor_fill_exposure_array = sensor_fill_exposure_array,
  },
  .meta_data_out_info_array =
  {
    .meta_data_out_info =
    {
      {
        .width = 0,
        .height = 0,
        .stats_type = 0,
      },
    },
    .size = 0,
  },
  .rolloff_config =
  {
    .enable = FALSE,
    .full_size_info =
    {
      .full_size_width = 0,
      .full_size_height = 0,
      .full_size_left_crop = 0,
      .full_size_top_crop = 0,
    },
  },
  .adc_readout_time = 0,
  .app_delay = {
    [SENSOR_DELAY_EXPOSURE] = 2,
    [SENSOR_DELAY_ANALOG_SENSOR_GAIN] = 2,
    [SENSOR_DELAY_DIGITAL_SENSOR_GAIN] = 2,

  },
  .noise_coeff = {
    .gradient_S = 3.738032e-06,
    .offset_S = 3.651935e-04,
    .gradient_O = 4.499952e-07,
    .offset_O = -2.968624e-04,
  },
};

#endif /* __gc4C33_LIB_H__ */
